#!/bin/bash

#check if script is run from LSF JOB
if [ -z "${LSB_JOBID}" ]; then
    echo "tamulauncher only runs from within batch job. Exiting now..."
   exit
fi

maxtasks=1000

NUMTASKS=0
CHECKPOINTRESTART=0
MPISTRING=""


usage()
{
cat <<EOF
Usage: $0 [options] FILE

This script will execute commands in FILE concurrently. 

OPTIONS:
  -h Shows this message
  -n <n> set the number of concurrent process
  -e pass options verbatim to mpi launcher
EOF
}



while getopts "n:e:r:h:?" OPT ; do
    case $OPT in
        n)
            NUMTASKS=$OPTARG
            if [[ $NUMTASKS != ${NUMTASKS//[^0-9]/} ]]; then
               echo "Error: Value of -n should be numeric value between 0 and $maxtasks"
               exit 1
            fi
            if (($NUMTASKS < 0 || $NUMTASKS > $maxtasks)); then
               echo "Error: Value of -n should be between 0 and $maxtoken. Value found: $NUMTASKS"
               exit 1
            fi
	    if (($NUMTASKS > $LSB_DJOB_NUMPROC)); then
               echo "Error:  value of -n ($NUMTASKS} > specified #procs in batchfile ($LSB_DJOB_NUMPROC)"
               exit 1
            fi
            ;;
        e)
            MPISTRING=$OPTARG
            echo "Info: mpi arguments: $MPISTRING will be passed verbatim to mpi launcher."
            ;;
        h)  usage
            ;;
        ?)
            usage
            exit 1
            ;;
    esac
done


# tamulauncher will take 1 parameter
# $1 = name of input file containing commands
shift $(( OPTIND-1 ))
input=$1

# check if input file exists.
if [ !  -f $input ];
then
    echo "Cannot locate file $input. Exiting now..."
    exit
fi


# get the lsf job id, use this as part of the name of the log file
jobid=${LSB_JOBID}


# if MPISTRING not defined and -n param was set, need
# to create MPI string with correct -np and -ppn setting
if [ -z "$MPISTRING" -a $NUMTASKS > 0 ]; then
# get the number of lsf procs
    lsfprocs=$LSB_DJOB_NUMPROC
    
# for now assume span is always 20
# todo: extract correct ptile from: LSB_SUB_RES_REQ var =span[ptile=10]
    ptile=20
    
    
#compute number of mpi tasks to start per node
    let "numnodes =  $lsfprocs/ $ptile"
    let "ppn = $NUMTASKS/$numnodes"

    MPISTRING="-np $NUMTASKS -perhost $ppn";
fi

echo $MPISTRING
#exit

exec=/software/tamusc/tamulauncher/src/run-many-serial-norestart.x

# logbase is the base name of the log file for every task 
logbase=tamulauncher/${jobid}-tamulaunch_

restart=0
#check if there already is a directory named tamulaunch
# if so this is a restart
if [ -d "tamulauncher" ]; then
    restart=1
else 
    mkdir tamulauncher
fi


# get the number of lines in the input
lines=`wc -l ${input} | cut -d" " -f1`

# run the actual program that runs the commands
echo mpiexec.hydra ${MPISTRING} ${exec} ${input} ${logbase} ${lines} ${restart}
mpiexec.hydra ${MPISTRING} ${exec} ${input} ${logbase} ${lines} ${restart}

# combine the logs from all the tasks
cat ${logbase}* > tamulauncher-log.${jobid}

# remove the individual task logs
rm -f ${logbase}*

